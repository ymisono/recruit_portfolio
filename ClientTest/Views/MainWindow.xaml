<Window x:Class="ClientTest.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:ClientTest.Views"
        xmlns:vm="clr-namespace:ClientTest.ViewModels"
        Title="MainWindow" Height="500" Width="620">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        
        
        <!--失敗表示メッセージボックス-->
        <l:InteractionMessageTrigger MessageKey="Error" Messenger="{Binding Messenger}">
            <l:InformationDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>

        <!--画面遷移トリガー-->
        <l:InteractionMessageTrigger MessageKey="Transition" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction WindowType="{x:Type v:LoginView}" Mode="Modal"/>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.25*" />
            <RowDefinition Height="1.2*" />
            <RowDefinition Height="2*" />
        </Grid.RowDefinitions>

        <!--ユーザー名表示-->
        <Grid Grid.Row="0" HorizontalAlignment="Stretch" Background="DarkSeaGreen" >
            <Label HorizontalAlignment="Right" VerticalAlignment="Center" Content="{Binding MyName}" Foreground="White" />
        </Grid>
        <StackPanel Grid.Row="1" Margin="10" FocusManager.FocusedElement="{Binding ElementName=passwordBox}" >
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10" >
                <TextBlock Text="ユーザー名" Margin="0 0 10 0"/>
                <TextBox Width="300" Text="{Binding DisplayUserName}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10" >
                <TextBlock Text="パスワード" Margin="0 0 10 0"/>
                <PasswordBox Name="passwordBox" Width="300" PasswordChar="*" >
                    <i:Interaction.Behaviors>
                        <l:PasswordBoxBindingSupportBehavior Password="{Binding DisplayPassword}" />
                    </i:Interaction.Behaviors>
                </PasswordBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10" >
                <Button Width="70" Height="30" Margin="0 0 10 0" Content="新規登録" Command="{Binding RegisterCommand}" />
                <Button Width="80" Height="35" Margin="10 0 10 0" Content="ログイン" Command="{Binding LoginCommand}" />
                <Button Width="70" Height="30" Margin="10 0 0 0" Content="ログアウト" Command="{Binding LogoutCommand}"/>
            </StackPanel>
        </StackPanel>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="358*"/>
                <ColumnDefinition Width="257*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="6*" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Label Content="クラウドメモ帳（書いた事が保存されるよ！）" FontSize="19" />
            <TextBox Grid.Row="1" AcceptsReturn="True" TextWrapping="Wrap" Text="{Binding memoText}" Margin="15 15 15 0" Grid.ColumnSpan="2" />
            <Button Grid.Row="2" Margin="0,8,30,8" Width="70" HorizontalAlignment="Right" Content="保存"
                    Command="{Binding SaveCommand}" Grid.Column="1"/>
        </Grid>

    </Grid>
</Window>
